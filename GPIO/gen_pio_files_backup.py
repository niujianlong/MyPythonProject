#!/usr/bin/python
# -*- coding:utf8 -*-

import os
import sys
import xlrd
import datetime

def  main():
    #Read vehicle variants configure information from excel file
    pio_filename = ur'.\Port_Cfg.h'
    dio_filename = ur'.\Dio_Cfg.h'
    filename = './RH850D1M1H_176Pin_IO_Config.xlsx'
    excel = xlrd.open_workbook(filename)
    sheet = excel.sheet_by_name(ur'RH850D1M1H_176Pin_IO_Config')
    fw = open(pio_filename,'w+')
    fdio_w = open(dio_filename,'w+')
    
    now = datetime.datetime.now()
    
    fw.write('/******************************************************************************\n')
    fw.write('**  (c) copyright 2015\n')   
    fw.write('**  Company       O-film\n')    
    fw.write('**                All rights reserved\n')    
    fw.write('**  Secrecy Level STRICTLY CONFIDENTIAL\n')    
    fw.write('*******************************************************************************\n')
    fw.write('**\n')
    fw.write('**          File  : Port_Cfg.h\n')
    fw.write('**          Description: RH850D1M1H_176Pin port IO configuration file, generated by tool automatically.\n')   
    fw.write('**                           Don\'t modify it manually.\n')      
    fw.write('**          Author: jiangyuchang\n')
    fw.write('**\n')
    #fw.write('**          Date  : %s-%s-%s\n'%(now.year,now.month,now.day))   
    fw.write('**          Date  : %s\n'%(now.strftime("%Y-%m-%d %H:%M:%S")))    
    fw.write('**\n')
    fw.write('**\n')
    fw.write('******************************************************************************/\n')
    fw.write('#ifndef PORT_CFG_H\n')
    fw.write('#define PORT_CFG_H\n')
    fw.write('\n')
    fw.write('/******************************************************************************\n')
    fw.write('**    INCLUDES\n')
    fw.write('******************************************************************************/\n')
    fw.write('#include "board.h"\n')
    fw.write('#include "device.h"\n')
    fw.write('\n')
    fw.write('\n')
    
    fw.write('/******************************************************************************\n')   
    fw.write('**    MACROS\n')
    fw.write('******************************************************************************/\n')    

    fdio_w.write('/******************************************************************************\n')
    fdio_w.write('**  (c) copyright 2015\n')   
    fdio_w.write('**  Company       O-film\n')    
    fdio_w.write('**                All rights reserved\n')    
    fdio_w.write('**  Secrecy Level STRICTLY CONFIDENTIAL\n')    
    fdio_w.write('*******************************************************************************\n')
    fdio_w.write('**\n')
    fdio_w.write('**          File  : Dio_Cfg.h\n')
    fdio_w.write('**          Description: RH850D1M1H digital IO configuration file, generated by tool automatically.\n')   
    fdio_w.write('**                           Don\'t modify it manually.\n')      
    fdio_w.write('**          Author: jiangyuchang\n')
    fdio_w.write('**\n')
    #fdio_w.write('**          Date  : %s-%s-%s\n'%(now.year,now.month,now.day))   
    fdio_w.write('**          Date  : %s\n'%(now.strftime("%Y-%m-%d %H:%M:%S")))    
    fdio_w.write('**\n')
    fdio_w.write('**\n')
    fdio_w.write('******************************************************************************/\n')
    fdio_w.write('#ifndef DIO_CFG_H\n')
    fdio_w.write('#define DIO_CFG_H\n')
    fdio_w.write('\n')
    fdio_w.write('/******************************************************************************\n')
    fdio_w.write('**    INCLUDES\n')
    fdio_w.write('******************************************************************************/\n')
    fdio_w.write('#include "board.h"\n')
    fdio_w.write('#include "device.h"\n')
    fdio_w.write('\n')
    fdio_w.write('\n')
    
    fdio_w.write('/******************************************************************************\n')   
    fdio_w.write('**    MACROS\n')
    fdio_w.write('******************************************************************************/\n')  

    
    port0_start_index = 11
    port0_end_index = 21
    port1_start_index = 25
    port1_end_index = 31
    port3_start_index = 35
    port3_end_index = 45
    port10_start_index = 49
    port10_end_index = 61
    port11_start_index = 65
    port11_end_index = 69
    port16_start_index = 73
    port16_end_index = 85
    port17_start_index = 89
    port17_end_index = 101

    registers = ('PMC','PM','PU','P','PIPC','PFCE','PFC','PBDC','PD','PIBC','PFCAE','PFCAE')
    fun_start_index = (3,16,29)
    fun_list = ('INIT','SLEEP','WAKEUP')    
    

    #Port registers configuration
    for index in range(0,3):
        fw.write('\n')	
        fw.write('/*****************PORT GROUP 0 %s CONFIGURATION**********************/\n'%fun_list[index])	        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port0_start_index,port0_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port0_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       %s0_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 8 %s CONFIGURATION**********************/\n'%fun_list[index])	
        for col in range(fun_start_index[index],fun_start_index[index]+11):
            value = 0;	
            for row in range(port1_start_index,port1_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port1_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       %s8_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 9 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+11):
            value = 0;	
            for row in range(port3_start_index,port3_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port3_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       %s9_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 10 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+11):
            value = 0;	
            for row in range(port10_start_index,port10_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port10_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       %s10_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 11 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+11):
            value = 0;	
            for row in range(port11_start_index,port11_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port11_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       %s11_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')	
        fw.write('/*****************JPORT GROUP 0 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+11):
            value = 0;	
            for row in range(port16_start_index,port16_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port16_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       J%s0_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')	
        fw.write('/*****************APORT GROUP 0 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+11):
            value = 0;	
            for row in range(port17_start_index,port17_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port17_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       A%s0_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

            
    fw.write('\n')	
    fw.write('\n')
    fw.write('/*****************PORT DIRECTION SETTING**********************/\n')  
    fdio_w.write('\n')    
    fdio_w.write('/***********PORT 0 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;	
        for row in range(port0_start_index,port0_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PMC0, BIT_%s);SETBIT(PM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index,row-port0_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PMC0, BIT_%s);CLEARBIT(PM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index,row-port0_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(P0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(P0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
            fdio_w.write(strline)
            
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 8 GROUP PORT BIT OPERATION***********/\n')         
    for col in range(2,3):
        value = 0;	
        for row in range(port1_start_index,port1_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PMC8, BIT_%s);SETBIT(PM8, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index,row-port1_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PMC8, BIT_%s);CLEARBIT(PM8, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index,row-port1_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(P8, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(P8, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR8, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
            fdio_w.write(strline)            

    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 9 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;	
        for row in range(port3_start_index,port3_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PMC9, BIT_%s);SETBIT(PM9, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index,row-port3_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PMC9, BIT_%s);CLEARBIT(PM9, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index,row-port3_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(P9, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(P9, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR9, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
            fdio_w.write(strline)
                        
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 10 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;	
        for row in range(port10_start_index,port10_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PMC10, BIT_%s);SETBIT(PM10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index,row-port10_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PMC10, BIT_%s);CLEARBIT(PM10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index,row-port10_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(P10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(P10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
            fdio_w.write(strline)
            
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 11 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;	
        for row in range(port11_start_index,port11_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PMC11, BIT_%s);SETBIT(PM11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index,row-port11_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PMC11, BIT_%s);CLEARBIT(PM11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index,row-port11_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(P11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(P11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
            fdio_w.write(strline)
            
    fw.write('\n')	
    fdio_w.write('\n')
    fdio_w.write('/***********JPORT 0 GROUP PORT BIT OPERATION***********/\n')    	
    for col in range(2,3):
        value = 0;	
        for row in range(port16_start_index,port16_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(JPMC0, BIT_%s);SETBIT(JPM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index,row-port16_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(JPMC0, BIT_%s);CLEARBIT(JPM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index,row-port16_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(JP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(JP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(JPPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
            fdio_w.write(strline)
            
    fw.write('\n')
    fdio_w.write('\n') 
    fdio_w.write('/***********APORT 0 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;	
        for row in range(port17_start_index,port17_end_index):
            strline = '#define      %s_SET_TO_INPUT()          SETBIT(APM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(APM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(AP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(AP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(APPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fdio_w.write(strline)

    #generate dio dbnc configuration information
    debounce_array = ('DIO_00','DIO_01','DIO_02','DIO_03','DIO_04','DIO_05','DIO_06','DIO_07', \
                      'DIO_08','DIO_09','DIO_10','DIO_11','DIO_12','DIO_13','DIO_14','DIO_15', \
                      'DIO_16','DIO_17','DIO_18','DIO_19','DIO_20','DIO_21','DIO_22','DIO_23', \
                      'DIO_24','DIO_25','DIO_26','DIO_27','DIO_28','DIO_29','DIO_30','DIO_31')
                      
    fdio_w.write('\n')
    fdio_w.write('\n')                      
    fdio_w.write('/*************DIO DBNC CONFIGURATION**************/\n')
    
    b3_dbnc_init_value = 0
    b2_dbnc_init_value = 0
    b1_dbnc_init_value = 0
    b0_dbnc_init_value = 0
    
    for col in range(39,40):
        for row in range(11,116):
            for index in range(0,32):
                if debounce_array[index] == str(sheet.cell(row,col).value):
                    if row >= port0_start_index and row < port0_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PMC0,BIT_%s);SETBIT(PM0,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index,row-port0_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
                        fdio_w.write(strline)

                    if row >= port1_start_index and row < port1_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PMC8,BIT_%s);SETBIT(PM8,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index,row-port1_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PPR8, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
                        fdio_w.write(strline)

                    if row >= port3_start_index and row < port3_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PMC9,BIT_%s);SETBIT(PM9,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index,row-port3_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PPR9, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
                        fdio_w.write(strline)

                    if row >= port10_start_index and row < port10_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PMC10,BIT_%s);SETBIT(PM10,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index,row-port10_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PPR10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
                        fdio_w.write(strline)

                    if row >= port11_start_index and row < port11_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PMC11,BIT_%s);SETBIT(PM11,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index,row-port11_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PPR11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
                        fdio_w.write(strline)

                    if row >= port16_start_index and row < port16_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(JPMC0,BIT_%s);SETBIT(JPM0,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index,row-port16_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(JPPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
                        fdio_w.write(strline)

                    if row >= port17_start_index and row < port17_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(APM0,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(APPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
                        fdio_w.write(strline)                        
                        
                    strline = '#define %s_DBNC_CHANNEL              %s_DBNC_CHANNEL\n'%(str(sheet.cell(row,2).value),str(sheet.cell(row,col).value))
                    fdio_w.write(strline)
                    strline = '#define %s_BTEST_DBNC_PORT()              Dio_getDbncState(%s_DBNC_CHANNEL)\n'%(str(sheet.cell(row,2).value),str(sheet.cell(row,2).value))
                    fdio_w.write(strline)
                        
                                                                                           
                    if int(sheet.cell(row,col+1).value) < 0 or int(sheet.cell(row,col+1).value) > 16:
                        print('Please input legal debounce number which should be betweeen 0 and 16.')
                        sys.exit(-1)
                    else:
                        dbnc_num = int(sheet.cell(row,col+1).value)
                    
                    if (16-dbnc_num) & 0x8 != 0:
                        b3_dbnc_init_value = b3_dbnc_init_value | (1 << index)
                    if (16-dbnc_num) & 0x4 != 0:
                        b2_dbnc_init_value = b2_dbnc_init_value | (1 << index)                        
                    if (16-dbnc_num) & 0x2 != 0:
                        b1_dbnc_init_value = b1_dbnc_init_value | (1 << index)                    
                    if (16-dbnc_num) & 0x1 != 0:
                        b0_dbnc_init_value = b0_dbnc_init_value | (1 << index)

        fdio_w.write('\n')
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT0    (%d)\n'%(b0_dbnc_init_value))
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT1    (%d)\n'%(b1_dbnc_init_value))
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT2    (%d)\n'%(b2_dbnc_init_value))
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT3    (%d)\n'%(b3_dbnc_init_value))
                        
    fw.write('\n')
    fw.write('\n')
    fw.write('\n')    
    fw.write('#endif\n')	
    fw.write('\n')
    fw.write('/**************************************End Of File******************************************/\n')

    fdio_w.write('\n')
    fdio_w.write('\n')
    fdio_w.write('\n')    
    fdio_w.write('#endif\n')	
    fdio_w.write('\n')
    fdio_w.write('/**************************************End Of File******************************************/\n')

               
	
    fw.close()
    fdio_w.close()
		
def dec_to_hex(value):
    first_byte = value/(16*16*16)
    second_byte = (value - first_byte*16*16*16)/(16*16)
    third_byte = (value - first_byte*16*16*16 - second_byte*16*16)/16
    fourth_byte = value - first_byte*16*16*16 - second_byte*16*16 - third_byte*16
    return (first_byte,second_byte,third_byte,fourth_byte)
    
if __name__ == '__main__':
    main()
  
