#!/usr/bin/python
# -*- coding:utf8 -*-

import sys
import xlrd
import datetime

def  main():
    #Read vehicle variants configure information from excel file
    pio_filename = ur'.\Port_Cfg.h'
    dio_filename = ur'.\Dio_Cfg.h'
    port_filename = ur'.\Port.h'
    Dio_H_filename = ur'.\Dio.h'
    filename = './RH850D1M1H_176Pin_IO_Config.xlsx'
    excel = xlrd.open_workbook(filename)
    sheet = excel.sheet_by_name(ur'RH850D1M1H_176Pin_IO_Config')
    fw = open(pio_filename,'w+')
    fdio_w = open(dio_filename,'w+')
    fpor_w = open(port_filename,'w+')
    fdio_h_w = open(Dio_H_filename,'w+')
    
    now = datetime.datetime.now()
    
    fw.write('/******************************************************************************\n')
    fw.write('**  (c) copyright 2015\n')   
    fw.write('**  Company       O-film\n')    
    fw.write('**                All rights reserved\n')    
    fw.write('**  Secrecy Level STRICTLY CONFIDENTIAL\n')    
    fw.write('*******************************************************************************\n')
    fw.write('**\n')
    fw.write('**          File  : Port_Cfg.h\n')
    fw.write('**          Description: RH850D1M1H_176Pin port IO configuration file, generated by tool automatically.\n')   
    fw.write('**                           Don\'t modify it manually.\n')      
    fw.write('**          Author:  jiangyuchang\n')
    fw.write('**          Porting: niujianlong\n')
    fw.write('**\n')
    #fw.write('**          Date  : %s-%s-%s\n'%(now.year,now.month,now.day))   
    fw.write('**          Date  : %s\n'%(now.strftime("%Y-%m-%d %H:%M:%S")))    
    fw.write('**\n')
    fw.write('**\n')
    fw.write('******************************************************************************/\n')
    fw.write('#ifndef PORT_CFG_H\n')
    fw.write('#define PORT_CFG_H\n')
    fw.write('\n')
    fw.write('/******************************************************************************\n')
    fw.write('**    INCLUDES\n')
    fw.write('******************************************************************************/\n')
    fw.write('#include "board.h"\n')
    fw.write('#include "device.h"\n')
    fw.write('\n')
    fw.write('\n')
    
    fw.write('/******************************************************************************\n')   
    fw.write('**    MACROS\n')
    fw.write('******************************************************************************/\n')    

    fdio_w.write('/******************************************************************************\n')
    fdio_w.write('**  (c) copyright 2015\n')   
    fdio_w.write('**  Company       O-film\n')    
    fdio_w.write('**                All rights reserved\n')    
    fdio_w.write('**  Secrecy Level STRICTLY CONFIDENTIAL\n')    
    fdio_w.write('*******************************************************************************\n')
    fdio_w.write('**\n')
    fdio_w.write('**          File  : Dio_Cfg.h\n')
    fdio_w.write('**          Description: RH850D1M1H digital IO configuration file, generated by tool automatically.\n')   
    fdio_w.write('**                           Don\'t modify it manually.\n')      
    fdio_w.write('**          Author:  jiangyuchang\n')
    fdio_w.write('**          Porting: niujianlong\n')
    fdio_w.write('**\n')
    #fdio_w.write('**          Date  : %s-%s-%s\n'%(now.year,now.month,now.day))   
    fdio_w.write('**          Date  : %s\n'%(now.strftime("%Y-%m-%d %H:%M:%S")))    
    fdio_w.write('**\n')
    fdio_w.write('**\n')
    fdio_w.write('******************************************************************************/\n')
    fdio_w.write('#ifndef DIO_CFG_H\n')
    fdio_w.write('#define DIO_CFG_H\n')
    fdio_w.write('\n')
    fdio_w.write('/******************************************************************************\n')
    fdio_w.write('**    INCLUDES\n')
    fdio_w.write('******************************************************************************/\n')
    fdio_w.write('#include "board.h"\n')
    fdio_w.write('#include "device.h"\n')
    fdio_w.write('\n')
    fdio_w.write('\n')
    
    fdio_w.write('/******************************************************************************\n')   
    fdio_w.write('**    MACROS\n')
    fdio_w.write('******************************************************************************/\n')  

    
    port0_start_index = 11
    port0_end_index = 21
    port1_start_index = 25
    port1_end_index = 31
    port3_start_index = 35
    port3_end_index = 45
    port10_start_index = 49
    port10_end_index = 61
    port11_start_index = 65
    port11_end_index = 69
    port16_start_index = 73
    port16_end_index = 85
    port17_start_index = 89
    port17_end_index = 101
    #add for RH850D1M1H
    port21_start_index = 105
    port21_end_index = 115
    
    port42_start_index = 119
    port42_end_index = 135
    
    port43_start_index = 139
    port43_end_index = 141
    
    port44_start_index = 145
    port44_end_index = 157
    
    port45_start_index = 161
    port45_end_index = 175
    
    jp0_start_index = 179
    jp0_end_index = 184

    registers = ('PMC','PM','PIPC','PFCE','PFC','PIBC','PBDC','P','PU','PD','PODC','PDSC')
    # add by njl for gen RH850 Port Init Register List
    PortGroup = (0,1,3,10,11,16,17,21,42,43,44,45,46)
    
    fun_start_index = (3,16)
    fun_list = ('INIT','SLEEP') 
    
    # add by njl for gen RH850 Port Init and sleep Register List
    fpor_w.write('/************************************************************************\n**\n** Description:     RH850 D1M1H Port Init Register List generated by tool\n**                  automatically  Don\'t modify it manually.\n** Author:          niujianlong\n** Generated Date:  '+str(now.strftime("%Y-%m-%d %H:%M:%S"))+'\n************************************************************************/\n#define      PORT_INIT_REG16_LIST \\\n')
    fdio_h_w.write('/************************************************************************\n**\n** Description:     RH850 D1M1H PORT_DIO_REG16_LIST generated by tool\n**                  automatically  Don\'t modify it manually.\n** Author:          niujianlong\n** Generated Date:  '+str(now.strftime("%Y-%m-%d %H:%M:%S"))+'\n************************************************************************/\n#define      PORT_DIO_REG16_LIST \\\n')
    for index in range(0,2): 
        if index == 1:
            fpor_w.write('/************************************************************************\n**\n** Description:     RH850 D1M1H Port Sleep Register List generated by tool\n**                  automatically  Don\'t modify it manually.\n** Author:          niujianlong\n** Generated Date:  '+str(now.strftime("%Y-%m-%d %H:%M:%S"))+'\n************************************************************************/\n#define      PORT_SLEEP_REG16_LIST \\\n')  
        for port_num in PortGroup:
            if index == 1:
                if port_num == 0: 
                    fdio_h_w.write('{ PORT'+str(port_num)+' ,    (uint16*)(&PORT_AWOP'+str(port_num)+') ,    (uint16*)(&PORT_AWOPPR'+str(port_num)+') }, \\\n')
                elif port_num == 46:
                    fdio_h_w.write('{ JPORT'+str(port_num-46)+' ,    (uint16*)(&PORTJ_AWOJP'+str(port_num-46)+') ,    (uint16*)(&PORTJ_AWOJPPR'+str(port_num-46)+') }, \\\n')
                else:
                    fdio_h_w.write('{ PORT'+str(port_num)+' ,    (uint16*)(&PORT_ISOP'+str(port_num)+') ,    (uint16*)(&PORT_ISOPPR'+str(port_num)+') }, \\\n') 
            for reg_name in registers:
                if port_num == 46:
                    fpor_w.write('{ (uint16 *) &PORTJ_AWOJ'+reg_name+str(port_num-46)+' ,    (uint16)(PORTJ_AWOJ'+reg_name+str(port_num-46)+'_'+fun_list[index]+') }, \\\n')    
                else:
                    if port_num == 0:
                        fpor_w.write('{ (uint16 *) &PORT_AWO'+reg_name+str(port_num)+' ,    (uint16)(PORT_AWO'+reg_name+str(port_num)+'_'+fun_list[index]+') }, \\\n')
                    else:
                        fpor_w.write('{ (uint16 *) &PORT_ISO'+reg_name+str(port_num)+' ,    (uint16)(PORT_ISO'+reg_name+str(port_num)+'_'+fun_list[index]+') }, \\\n')

                
    #Port registers configuration
    for index in range(0,2):
        fw.write('\n')	
        fw.write('/*****************PORT GROUP 0 %s CONFIGURATION**********************/\n'%fun_list[index])	        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port0_start_index,port0_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port0_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_AWO%s0_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 1 %s CONFIGURATION**********************/\n'%fun_list[index])	
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port1_start_index,port1_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port1_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s1_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 3 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port3_start_index,port3_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port3_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s3_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 10 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port10_start_index,port10_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port10_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s10_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)

        fw.write('\n')	
        fw.write('/*****************PORT GROUP 11 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port11_start_index,port11_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port11_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s11_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')	
        fw.write('/*****************PORT GROUP 16 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port16_start_index,port16_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port16_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s16_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')	
        fw.write('/*****************PORT GROUP 17 %s CONFIGURATION**********************/\n'%fun_list[index])		
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;	
            for row in range(port17_start_index,port17_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port17_start_index))
            #print '%d'%value	
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s17_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])	+ '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
        
        
        fw.write('\n')    
        fw.write('/*****************PORT GROUP 21 %s CONFIGURATION**********************/\n'%fun_list[index])        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;    
            for row in range(port21_start_index,port21_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port21_start_index))
            #print '%d'%value    
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s21_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])    + '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')    
        fw.write('/*****************PORT GROUP 42 %s CONFIGURATION**********************/\n'%fun_list[index])        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;    
            for row in range(port42_start_index,port42_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port42_start_index))
            #print '%d'%value    
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s42_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])    + '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')    
        fw.write('/*****************PORT GROUP 43 %s CONFIGURATION**********************/\n'%fun_list[index])        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;    
            for row in range(port43_start_index,port43_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port43_start_index))
            #print '%d'%value    
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s43_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])    + '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')    
        fw.write('/*****************PORT GROUP 44 %s CONFIGURATION**********************/\n'%fun_list[index])        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;    
            for row in range(port44_start_index,port44_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port44_start_index))
            #print '%d'%value    
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s44_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])    + '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')    
        fw.write('/*****************PORT GROUP 45 %s CONFIGURATION**********************/\n'%fun_list[index])        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;    
            for row in range(port45_start_index,port45_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - port45_start_index))
            #print '%d'%value    
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORT_ISO%s45_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])    + '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
        fw.write('\n')    
        fw.write('/*****************JPORT GROUP 0 %s CONFIGURATION**********************/\n'%fun_list[index])        
        for col in range(fun_start_index[index],fun_start_index[index]+12):
            value = 0;    
            for row in range(jp0_start_index,jp0_end_index):
                if ((1 !=  int(sheet.cell(row,col).value)) and (0 != int(sheet.cell(row,col).value))):
                    print 'The config value is illegal, the config value must be 0 or 1.'
                    sys.exit(-1)
                #print '%d'%(int(sheet.cell(row,col).value))
                value = value | ((int(sheet.cell(row,col).value)) << (row - jp0_start_index))
            #print '%d'%value    
            first,seecond,third,fourth = dec_to_hex(value)      
            strline = '#define       PORTJ_AWOJ%s0_%s                            '%(registers[col-fun_start_index[index]],fun_list[index])    + '(0x%X%X%X%Xu)\n'%(first,seecond,third,fourth)
            fw.write(strline)
            
            
    #***************************************************gen the MACRO  ****************************************************************************       
    fw.write('\n')	
    fw.write('\n')
    fw.write('/*****************PORT DIRECTION SETTING**********************/\n')  
    fdio_w.write('\n')    
    fdio_w.write('/***********PORT 0 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        i = 0; #add for port.h
        fpor_w.write('/***************************************************************************\n**\n** Description:     RH850 D1M1H Port Pin Register Map List generated by tool\n**                  automatically  Don\'t modify it manually.\n** Author:          niujianlong\n** Generated Date:  '+str(now.strftime("%Y-%m-%d %H:%M:%S"))+'\n***************************************************************************/\n')
        fdio_h_w.write('/***************************************************************************\n**\n** Description:     RH850 D1M1H PIN_DIO_REG16_LIST generated by tool\n**                  automatically  Don\'t modify it manually.\n** Author:          niujianlong\n** Generated Date:  '+str(now.strftime("%Y-%m-%d %H:%M:%S"))+'\n***************************************************************************/\n')
        fpor_w.write('#define      PORT_PIN_REG16_LIST     '+'\\'+'\n')
        fdio_h_w.write('#define      PIN_DIO_REG16_LIST     '+'\\'+'\n')
        for row in range(port0_start_index,port0_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_AWOPMC0, BIT_%s);SETBIT(PORT_AWOPM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index,row-port0_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_AWOPMC0, BIT_%s);CLEARBIT(PORT_AWOPM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index,row-port0_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_AWOP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_AWOP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_AWOPPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_AWOPMC'+PortNum+' , (uint16 *) &PORT_AWOPM'+PortNum+', (uint16 *) &PORT_AWOPFC'+PortNum+', (uint16 *) &PORT_AWOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_AWOP'+PortNum+' , (uint16 *) &PORT_AWOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            i = i + 1
            
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 1 GROUP PORT BIT OPERATION***********/\n')         
    for col in range(2,3):
        value = 0;
        i = 0 #add for port.h
        fpor_w.write('\\\n')	
        for row in range(port1_start_index,port1_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC1, BIT_%s);SETBIT(PORT_ISOPM1, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index,row-port1_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC1, BIT_%s);CLEARBIT(PORT_ISOPM1, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index,row-port1_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP1, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP1, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR1, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
            fdio_w.write(strline)  
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            i = i + 1         

    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 3 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        i = 0 #add for port.h
        fpor_w.write('\\\n')    	
        for row in range(port3_start_index,port3_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC3, BIT_%s);SETBIT(PORT_ISOPM3, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index,row-port3_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC3, BIT_%s);CLEARBIT(PORT_ISOPM3, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index,row-port3_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP3, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP3, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR3, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            i = i + 1            
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 10 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        i = 0 #add for port.h
        fpor_w.write('\\\n')	
        for row in range(port10_start_index,port10_end_index):
            
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC10, BIT_%s);SETBIT(PORT_ISOPM10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index,row-port10_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC10, BIT_%s);CLEARBIT(PORT_ISOPM10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index,row-port10_start_index)
            fw.write(strline)
            
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1 
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 11 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')	
        for row in range(port11_start_index,port11_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC11, BIT_%s);SETBIT(PORT_ISOPM11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index,row-port11_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC11, BIT_%s);CLEARBIT(PORT_ISOPM11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index,row-port11_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1 
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 16 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')        
        for row in range(port16_start_index,port16_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC16, BIT_%s);SETBIT(PORT_ISOPM16, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index,row-port16_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC16, BIT_%s);CLEARBIT(PORT_ISOPM16, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index,row-port16_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP16, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP16, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PPR16, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1 
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 17 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')     
        for row in range(port17_start_index,port17_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC17, BIT_%s);SETBIT(PORT_ISOPM17, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index,row-port17_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC17, BIT_%s);CLEARBIT(PORT_ISOPM17, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index,row-port17_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP17, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP17, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR17, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1 
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 21 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')       
        for row in range(port21_start_index,port21_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC21, BIT_%s);SETBIT(PORT_ISOPM21, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port21_start_index,row-port21_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC21, BIT_%s);CLEARBIT(PORT_ISOPM21, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port21_start_index,row-port21_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP21, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port21_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP21, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port21_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR21, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port21_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1 
    
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 42 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')     
        for row in range(port42_start_index,port42_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC42, BIT_%s);SETBIT(PORT_ISOPM42, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port42_start_index,row-port42_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC42, BIT_%s);CLEARBIT(PORT_ISOPM42, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port42_start_index,row-port42_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP42, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port42_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP42, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port42_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR42, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port42_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1 
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 43 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0; 
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')    
        for row in range(port43_start_index,port43_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC43, BIT_%s);SETBIT(PORT_ISOPM43, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port43_start_index,row-port43_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC43, BIT_%s);CLEARBIT(PORT_ISOPM43, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port43_start_index,row-port43_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP43, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port43_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP43, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port43_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR43, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port43_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1 
    
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 44 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0;
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')     
        for row in range(port44_start_index,port44_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC44, BIT_%s);SETBIT(PORT_ISOPM44, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port44_start_index,row-port44_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC44, BIT_%s);CLEARBIT(PORT_ISOPM44, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port44_start_index,row-port44_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP44, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port44_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP44, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port44_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR44, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port44_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')          
            i = i + 1
    fw.write('\n')
    fdio_w.write('\n')
    fdio_w.write('/***********PORT 45 GROUP PORT BIT OPERATION***********/\n')     
    for col in range(2,3):
        value = 0; 
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')      
        for row in range(port45_start_index,port45_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORT_ISOPMC45, BIT_%s);SETBIT(PORT_ISOPM45, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port45_start_index,row-port45_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORT_ISOPMC45, BIT_%s);CLEARBIT(PORT_ISOPM45, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port45_start_index,row-port45_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORT_ISOP45, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port45_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORT_ISOP45, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port45_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORT_ISOPPR45, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port45_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOPMC'+PortNum+' , (uint16 *) &PORT_ISOPM'+PortNum+', (uint16 *) &PORT_ISOPFC'+PortNum+', (uint16 *) &PORT_ISOPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ PORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_ISOP'+PortNum+' , (uint16 *) &PORT_ISOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1
    
    
    
    fw.write('\n')	
    fdio_w.write('\n')
    fdio_w.write('/***********JPORT 0 GROUP PORT BIT OPERATION***********/\n')    	
    for col in range(2,3):
        value = 0;	
        #add for port.h
        i = 0 
        fpor_w.write('\\\n')   
        for row in range(jp0_start_index,jp0_end_index):
            strline = '#define      %s_SET_TO_INPUT()          CLEARBIT(PORTJ_AWOJPMC0, BIT_%s);SETBIT(PORTJ_AWOJPM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-jp0_start_index,row-jp0_start_index)
            fw.write(strline)
            strline = '#define      %s_SET_TO_OUTPUT()          CLEARBIT(PORTJ_AWOJPMC0, BIT_%s);CLEARBIT(PORTJ_AWOJPM0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-jp0_start_index,row-jp0_start_index)
            fw.write(strline)
                 
            strline = '#define      %s_BSET_PORT()                                       SETBIT(PORTJ_AWOJP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-jp0_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BCLR_PORT()                                       CLEARBIT(PORTJ_AWOJP0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-jp0_start_index)
            fdio_w.write(strline)
            strline = '#define      %s_BTEST_PORT()                                       TESTBIT(PORTJ_AWOJPPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-jp0_start_index)
            fdio_w.write(strline)
            #add by niujianlong for gen the port.h file
            PortNum = get_port_number(sheet,row);
            fpor_w.write('{ JPORT'+PortNum+'_'+str(i)+', (uint16 *) &PORTJ_AWOJPMC'+PortNum+' , (uint16 *) &PORTJ_AWOJPM'+PortNum+', (uint16 *) &PORTJ_AWOJPFC'+PortNum+', (uint16 *) &PORTJ_AWOJPFCE'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')
            fdio_h_w.write('{ JPORT'+PortNum+'_'+str(i)+', (uint16 *) &PORT_AWOP'+PortNum+' , (uint16 *) &PORT_AWOPPR'+PortNum+',  (uint16)(BIT_'+str(i)+')   }, '+'\\'+'\n')            
            i = i + 1
    

    #generate dio dbnc configuration information
    debounce_array = ('DIO_00','DIO_01','DIO_02','DIO_03','DIO_04','DIO_05','DIO_06','DIO_07', \
                      'DIO_08','DIO_09','DIO_10','DIO_11','DIO_12','DIO_13','DIO_14','DIO_15', \
                      'DIO_16','DIO_17','DIO_18','DIO_19','DIO_20','DIO_21','DIO_22','DIO_23', \
                      'DIO_24','DIO_25','DIO_26','DIO_27','DIO_28','DIO_29','DIO_30','DIO_31')
                      
    fdio_w.write('\n')
    fdio_w.write('\n')                      
    fdio_w.write('/*************DIO DBNC CONFIGURATION**************/\n')
    
    b3_dbnc_init_value = 0
    b2_dbnc_init_value = 0
    b1_dbnc_init_value = 0
    b0_dbnc_init_value = 0
    
    for col in range(29,30):
        for row in range(11,184):
            for index in range(0,32):
                if debounce_array[index] == str(sheet.cell(row,col).value):
                    if row >= port0_start_index and row < port0_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PORT_AWOPMC0,BIT_%s);SETBIT(PORT_AWOPM0,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index,row-port0_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_AWOPPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port0_start_index)
                        fdio_w.write(strline)

                    if row >= port1_start_index and row < port1_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PORT_ISOPMC1,BIT_%s);SETBIT(PORT_ISOPM8,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index,row-port1_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR1, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port1_start_index)
                        fdio_w.write(strline)

                    if row >= port3_start_index and row < port3_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PORT_ISOPMC3,BIT_%s);SETBIT(PORT_ISOPM9,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index,row-port3_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR3, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port3_start_index)
                        fdio_w.write(strline)

                    if row >= port10_start_index and row < port10_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PORT_ISOPMC10,BIT_%s);SETBIT(PORT_ISOPM10,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index,row-port10_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR10, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port10_start_index)
                        fdio_w.write(strline)

                    if row >= port11_start_index and row < port11_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PORT_ISOPMC11,BIT_%s);SETBIT(PORT_ISOPM11,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index,row-port11_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR11, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port11_start_index)
                        fdio_w.write(strline)

                    if row >= port16_start_index and row < port16_end_index:
                        strline = '#define %s_SET_TO_INPUT()              CLEARBIT(PORT_ISOPMC16,BIT_%s);SETBIT(PORT_ISOPM16,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index,row-port16_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR16, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port16_start_index)
                        fdio_w.write(strline)

                    if row >= port17_start_index and row < port17_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(PORT_ISOPMC17,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PPORT_ISOPR17, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port17_start_index)
                        fdio_w.write(strline)                        
                    
                    if row >= port21_start_index and row < port21_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(PORT_ISOPMC21,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port21_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR21, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port21_start_index)
                        fdio_w.write(strline)
                    
                    if row >= port42_start_index and row < port42_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(PORT_ISOPMC42,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port42_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR42, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port42_start_index)
                        fdio_w.write(strline)
                    
                    if row >= port43_start_index and row < port43_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(PORT_ISOPMC43,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port43_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR43, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port43_start_index)
                        fdio_w.write(strline)
                    
                    if row >= port44_start_index and row < port44_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(PORT_ISOPMC44,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port44_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR44, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port44_start_index)
                        fdio_w.write(strline)
                    
                    if row >= port45_start_index and row < port45_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(PORT_ISOPMC45,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port45_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORT_ISOPPR45, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-port45_start_index)
                        fdio_w.write(strline)
                        
                    if row >= jp0_start_index and row < jp0_end_index:
                        strline = '#define %s_SET_TO_INPUT()              SETBIT(PORTJ_AWOJPMC0,BIT_%s)\n'%(str(sheet.cell(row,col).value),row-jp0_start_index)
                        fdio_w.write(strline)
                        strline = '#define %s_BTEST_PORT()              TESTBIT(PORTJ_AWOJPPR0, BIT_%s)\n'%(str(sheet.cell(row,col).value),row-jp0_start_index)
                        fdio_w.write(strline)    
                        
                    strline = '#define %s_DBNC_CHANNEL              %s_DBNC_CHANNEL\n'%(str(sheet.cell(row,2).value),str(sheet.cell(row,col).value))
                    fdio_w.write(strline)
                    strline = '#define %s_BTEST_DBNC_PORT()              Dio_getDbncState(%s_DBNC_CHANNEL)\n'%(str(sheet.cell(row,2).value),str(sheet.cell(row,2).value))
                    fdio_w.write(strline)
                        
                                                                                           
                    if int(sheet.cell(row,col+1).value) < 0 or int(sheet.cell(row,col+1).value) > 16:
                        print('Please input legal debounce number which should be betweeen 0 and 16.')
                        sys.exit(-1)
                    else:
                        dbnc_num = int(sheet.cell(row,col+1).value)
                    
                    if (16-dbnc_num) & 0x8 != 0:
                        b3_dbnc_init_value = b3_dbnc_init_value | (1 << index)
                    if (16-dbnc_num) & 0x4 != 0:
                        b2_dbnc_init_value = b2_dbnc_init_value | (1 << index)                        
                    if (16-dbnc_num) & 0x2 != 0:
                        b1_dbnc_init_value = b1_dbnc_init_value | (1 << index)                    
                    if (16-dbnc_num) & 0x1 != 0:
                        b0_dbnc_init_value = b0_dbnc_init_value | (1 << index)

        fdio_w.write('\n')
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT0    (%d)\n'%(b0_dbnc_init_value))
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT1    (%d)\n'%(b1_dbnc_init_value))
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT2    (%d)\n'%(b2_dbnc_init_value))
        fdio_w.write('#define DIO_DBNC_INIT_COUNTER_BIT3    (%d)\n'%(b3_dbnc_init_value))
                        
    fw.write('\n')
    fw.write('\n')
    fw.write('\n')    
    fw.write('#endif\n')	
    fw.write('\n')
    fw.write('/**************************************End Of File******************************************/\n')

    fdio_w.write('\n')
    fdio_w.write('\n')
    fdio_w.write('\n')    
    fdio_w.write('#endif\n')	
    fdio_w.write('\n')
    fdio_w.write('/**************************************End Of File******************************************/\n')

               
	
    fw.close()
    fdio_w.close()
    fdio_h_w.close()
    fpor_w.close()
		
def dec_to_hex(value):
    first_byte = value/(16*16*16)
    second_byte = (value - first_byte*16*16*16)/(16*16)
    third_byte = (value - first_byte*16*16*16 - second_byte*16*16)/16
    fourth_byte = value - first_byte*16*16*16 - second_byte*16*16 - third_byte*16
    return (first_byte,second_byte,third_byte,fourth_byte)
    
def get_port_number(sheet, row):#这个函数就是为了获取第二列中的P100中的10这个数字
    PortNum = str(sheet.cell(row, 1).value).split('(')[1].split(')')[0];
        # print str(sheet.cell(row,1).value).split('(')[1].split(')')[0]
    PortNum = filter(str.isdigit, PortNum)
    if len(PortNum) == 2:
        PortNum = PortNum[0] 
    else:
        PortNum = PortNum[0:2]
    return PortNum
if __name__ == '__main__':
    main()
  
